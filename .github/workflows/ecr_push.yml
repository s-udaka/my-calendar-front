name: ECR Push

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  ecr-push:
    runs-on: ubuntu-latest
    name: ECR Push
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/')
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "ap-northeast-1"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: my-calendar-front
          IMAGE_TAG: latest
          AWS_ACCESS_KEY_MY_CALENDAR: ${{ secrets.AWS_ACCESS_KEY_MY_CALENDAR }}
          AWS_SECRET_KEY_MY_CALENDAR: ${{ secrets.AWS_SECRET_KEY_MY_CALENDAR }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG my-calendar/. --build-arg aws_access_key=$AWS_ACCESS_KEY_MY_CALENDAR --build-arg aws_secret_key=$AWS_SECRET_KEY_MY_CALENDAR
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
